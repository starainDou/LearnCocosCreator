{"version":3,"sources":["assets/Script/Test/TestButton.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAuC;AAEvC;IAAA;IAkIA,CAAC;IAjIG,wCAAwC;IACjC,6BAAkB,GAAzB,UAA8C,IAAY,EAAE,MAAc,EAAE,QAAW,EAAE,MAAY;QACjG,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,mBAAmB;QACrD,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,UAAU;QACtC,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAG,EAAE,CAAC,CAAC,CAAC;QAEjD,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,YAAY;QAC7C,SAAS,CAAC,IAAI,GAAG,6BAA6B,CAAC;QAC/C,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;QAC9B,SAAS,CAAC,KAAK,GAAI,iBAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;QACtD,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB;QAC1D,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,mBAAmB;QAE1E,IAAM,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEpB,IAAM,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAEM,2BAAgB,GAAvB,UAAwB,MAAc,EAAE,SAAiB,EAAE,OAAe;QACtE,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC1D,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC5B,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,mDAAmD;QAEnD,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAChC,SAAS,CAAC,IAAI,GAAG,6BAA6B,CAAC;QAC/C,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC/B,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;QAEjC,IAAM,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,MAAM,GAAG,uEAAuE,CAAC;QACvF,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,CAAC,UAAU,GAAG,EAAE,CAAA;QACrB,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB;QAC5D,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,SAAS;QACtC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC;QACtD,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC;QAEpD,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QAEhD,IAAM,iBAAiB,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC1D,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;QACxC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,iBAAiB,CAAC,eAAe,GAAG,UAAU,CAAC;QAG/C,IAAI,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,WAAW;QAChC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACpC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAG5E,IAAM,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;QAC3B,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;QACnC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;QACpC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC3C,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IACnC,CAAC;IAEM,6BAAkB,GAAzB,UAA0B,MAAc,EAAE,SAAiB,EAAE,OAAe;QACxE,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC1D,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAG,EAAE,CAAC,CAAC,CAAC;QACjD,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;QAElC,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAChC,SAAS,CAAC,IAAI,GAAG,6BAA6B,CAAC;QAC/C,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;QAC9B,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;QACtD,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;QAEjC,IAAM,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;QAC7B,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,2EAA2E;QAC3E,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,SAAS;QACtC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC;QAEtD,IAAM,iBAAiB,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC1D,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;QACxC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,iBAAiB,CAAC,eAAe,GAAG,UAAU,CAAC;QAE/C,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1C,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;QACvD,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;QAGlC,IAAI,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,WAAW;QAChC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QAGpC,IAAM,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;QACnC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;QACpC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/C,6CAA6C;IAGjD,CAAC;IAEc,gCAAqB,GAApC,UAAqC,KAAe;QAChD,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QACjC,OAAO,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClH,IAAI,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9C,OAAO,WAAW,CAAC;IACvB,CAAC;IAEM,qBAAU,GAAjB,UAAkB,MAAc;IAEhC,CAAC;IACL,iBAAC;AAAD,CAlIA,AAkIC,IAAA;;AACD,0EAA0E;AAC1E,sEAAsE","file":"","sourceRoot":"/","sourcesContent":["import DDYUtil from \"../Utils/DDYUtil\";\n\nexport default class TestButton {\n    // T extends Function 泛型T，且需要继承自Function\n    static testDataTypeButton<T extends Function>(name: string, parent:cc.Node, callback: T, target?: any) {\n        const buttonNode = new cc.Node(); // 创建button的 node节点\n        buttonNode.name = name;\n        buttonNode.parent = parent; // 添加到当前节点\n        buttonNode.setPosition(new cc.Vec2(0, 650));\n        buttonNode.setContentSize(new cc.Size(200,  50));\n\n        const labelNode = new cc.Node(); // 创建按钮文本的节点\n        labelNode.name = 'data_type_button_label_node';\n        labelNode.parent = buttonNode;\n        labelNode.color =  DDYUtil.colorHex(0x00AAFF); // 文字颜色\n        labelNode.setPosition(new cc.Vec2(0, 0)); // 设置 Label 位置居中\n        labelNode.setContentSize(buttonNode.getContentSize()); // 设置 Label 大小与按钮相同\n\n        const label = labelNode.addComponent(cc.Label);\n        label.string = '点击我测试数据类型';\n        label.fontSize = 30;\n\n        const button = buttonNode.addComponent(cc.Button);\n        button.node.on('click', callback, target);\n    }\n\n    static testNumberButton(parent:cc.Node, component: string, handler: string): [cc.Node, cc.Node] {\n        const buttonNode = new cc.Node('test_number_button_node');\n        parent.addChild(buttonNode); \n        buttonNode.setPosition(new cc.Vec2(0, 600));\n        //buttonNode.setContentSize(new cc.Size(200,  50));\n\n        const labelNode = new cc.Node();\n        labelNode.name = 'data_type_button_label_node';\n        buttonNode.addChild(labelNode);\n        labelNode.setPosition(new cc.Vec2(0, 0));\n        labelNode.color = cc.Color.WHITE;\n\n        const label = labelNode.addComponent(cc.Label);\n        label.string = '点击我测试Number，我可是能够换行的哦，不信你看看Hello worl!You are so beautyful and lovely';\n        label.fontSize = 22;\n        label.lineHeight = 26\n        label.useSystemFont = true;\n        label.overflow = cc.Label.Overflow.SHRINK; // 文字显示超出范围时的处理方式\n        label.enableWrapText = true; // 是否自动换行\n        label.horizontalAlign = cc.Label.HorizontalAlign.LEFT;\n        label.verticalAlign = cc.Label.VerticalAlign.CENTER;\n\n        labelNode.setContentSize(200, labelNode.height);\n    \n        const clickEventHandler = new cc.Component.EventHandler();\n        clickEventHandler.target = parent;\n        clickEventHandler.component = component;\n        clickEventHandler.handler = handler;\n        clickEventHandler.customEventData = \"我是最后一个参数\";\n        \n\n        let sprite = buttonNode.addComponent(cc.Sprite);\n        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\n        sprite.trim = false; // 是否使用裁剪模式\n        sprite.type = cc.Sprite.Type.SLICED;\n        sprite.spriteFrame = this.backgroundSpriteFrame(DDYUtil.colorHex(0x993344));\n\n\n        const button = buttonNode.addComponent(cc.Button);\n        button.target = buttonNode;\n        button.normalColor = cc.Color.CYAN;\n        button.pressedColor = cc.Color.BLUE;\n        button.transition = cc.Button.Transition.COLOR;\n        button.clickEvents.push(clickEventHandler);\n        return [buttonNode, labelNode];\n    }\n\n    static testtNumberButton2(parent:cc.Node, component: string, handler: string) {\n        const buttonNode = new cc.Node('test_number_button_node');\n        buttonNode.parent = parent; \n        buttonNode.setPosition(new cc.Vec2(0, 600));\n        buttonNode.setContentSize(new cc.Size(200,  50));\n        buttonNode.color = cc.Color.GREEN;\n\n        const labelNode = new cc.Node();\n        labelNode.name = 'data_type_button_label_node';\n        labelNode.parent = buttonNode;\n        labelNode.setPosition(new cc.Vec2(0, 0));\n        labelNode.setContentSize(buttonNode.getContentSize());\n        labelNode.color = cc.Color.WHITE;\n\n        const label = labelNode.addComponent(cc.Label);\n        label.string = '点击我测试Number';\n        label.fontSize = 30;\n        label.useSystemFont = true;\n        //label.overflow = cc.Label.Overflow.RESIZE_HEIGHT; // 文字显示超出范围时的处理方式：自适应宽度\n        label.enableWrapText = true; // 是否自动换行\n        label.horizontalAlign = cc.Label.HorizontalAlign.LEFT;\n    \n        const clickEventHandler = new cc.Component.EventHandler();\n        clickEventHandler.target = parent;\n        clickEventHandler.component = component;\n        clickEventHandler.handler = handler;\n        clickEventHandler.customEventData = \"我是最后一个参数\";\n\n        const background = new cc.Node('background');\n        background.setPosition(new cc.Vec2(0, 0));\n        background.setContentSize(buttonNode.getContentSize());\n        background.color = cc.Color.WHITE;\n        \n\n        let sprite = buttonNode.addComponent(cc.Sprite);\n        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\n        sprite.trim = false; // 是否使用裁剪模式\n        sprite.type = cc.Sprite.Type.SLICED;\n\n\n        const button = buttonNode.addComponent(cc.Button);\n        button.normalColor = cc.Color.CYAN;\n        button.pressedColor = cc.Color.BLUE;\n        button.transition = cc.Button.Transition.COLOR;\n        //button.clickEvents.push(clickEventHandler);\n        \n        \n    }\n\n    private static backgroundSpriteFrame(color: cc.Color): cc.SpriteFrame {\n        let texture = new cc.Texture2D();\n        texture.initWithData(new Uint8Array([color.r, color.g, color.b, color.a]), cc.Texture2D.PixelFormat.RGB888, 1, 1);\n        let spriteFrame = new cc.SpriteFrame(texture);\n        return spriteFrame;\n    }\n\n    static testButton(parent:cc.Node) {\n     \n    }\n}\n// cc.Sprite https://docs.cocos.com/creator/2.4/api/zh/classes/Sprite.html\n// https://docs.cocos.com/creator/2.4/manual/zh/components/button.html"]}