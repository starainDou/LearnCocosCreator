{"version":3,"sources":["assets/Script/Utils/DDYUtil.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;QASI,KAAK;QACG,UAAK,GAAa,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;IA0B7C,CAAC;IAlCiB,oBAAY,GAA1B;QACI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACpB,OAAO,CAAC,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;SACrC;QACD,OAAO,OAAO,CAAC,SAAS,CAAC;IAC7B,CAAC;IAID;;;;OAIG;IACH,0BAAQ,GAAR,UAAS,GAAoB;QACzB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,EAAE,wBAAwB;YACnD,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACpB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;aAC/B;iBAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC7B,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;aACnB;YACD,OAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACnC;aAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,EAAE,uCAAuC;YACzE,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW;gBACvC,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;aAC1E;iBAAM,EAAE,aAAa;gBAClB,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;aAC9F;SACJ;aAAM,EAAE,+CAA+C;YACpD,IAAM,KAAK,GAAU,GAAG,CAAC,CAAC,mDAAmD;YAC7E,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;SACxE;IAEL,CAAC;IACL,cAAC;AAAD,CApCA,AAoCC,IAAA;AACD,oDAAoD;AACpD,+FAA+F;AAC/F,kBAAe,OAAO,CAAC,YAAY,EAAE,CAAA","file":"","sourceRoot":"/","sourcesContent":["class DDYUtil {\n    private static _instance: DDYUtil;\n    public static _getInstance(): DDYUtil {\n        if (!DDYUtil._instance) {\n            DDYUtil._instance = new DDYUtil();\n        }\n        return DDYUtil._instance;\n    }\n\n    // 颜色\n    private color: cc.Color = new cc.Color();\n    /**\n     * 根据十六进制颜色 string 或 number 得到 Color\n     * @param hex 字符串或十六进制颜色 '#FFFFFF' 0xFFFFFF\n     * @returns cc.Color\n     */\n    colorHex(hex: string | number): cc.Color {\n        if (typeof hex === 'string') { // 这里 foo 被收窄为 string 类型\n            if (hex.includes('0x')) {\n                hex = hex.replace('0x','#');\n            } else if (!hex.startsWith(\"#\")) {\n                hex = \"#\" + hex;\n            }\n            return  this.color.fromHEX(hex);\n        } else if (typeof hex === 'number') { // 这里 foo 被收窄为 number 类型 [这里十六进制number]\n            if ((hex & 0xff000000) === 0) { // 0xFFFFFF\n                return new cc.Color((hex >> 16) & 0xff, (hex >> 8) & 0xff, hex & 0xff);\n            } else { // 0xFFFFFFFF\n                return new cc.Color((hex >> 24) & 0xff, (hex >> 16) & 0xff, (hex >> 8) & 0xff, hex & 0xff);\n            }\n        } else { // 这里给never类型的变量赋值，走到这里证明为非规定类型，避免新增的联合类型没有对应实现\n            const check: never = hex; // Type 'boolean' is not assignable to type 'never'\n            console.log('执行这里说明有未处理的联合类型' + typeof hex + '不能赋值给' + typeof check);\n        }\n        \n    }\n}\n// 在一个文件或模块中，export/import可以有多个，但是export default只有一个\n// export 导出时，导入需要加 {}，export default导出时不需要 {}，如 import DDYUtil from \"./Utils/DDYUtil\"; 用任意变量接收\nexport default DDYUtil._getInstance()"]}