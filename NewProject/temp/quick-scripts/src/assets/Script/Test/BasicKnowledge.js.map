{"version":3,"sources":["assets/Script/Test/BasicKnowledge.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAqC;AAErC,IAAiB,OAAO,CAWvB;AAXD,WAAiB,OAAO;IACpB,OAAO;IACI,WAAG,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;IACvC,gBAAQ,GAAY,IAAI,CAAC;IACpC,OAAO;IACP,SAAgB,YAAY,CAAC,IAAY,EAAE,EAAc;QAAd,mBAAA,EAAA,MAAc;QACrD,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;IAC9C,CAAC;IAFe,oBAAY,eAE3B,CAAA;IACD,SAAgB,SAAS,CAAC,IAAY,EAAE,EAAc;QAAd,mBAAA,EAAA,MAAc;QAClD,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;IAClD,CAAC;IAFe,iBAAS,YAExB,CAAA;AACL,CAAC,EAXgB,OAAO,GAAP,eAAO,KAAP,eAAO,QAWvB;AACD,MAAM,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,sBAAsB;AAEnD,WAAW;AACX,+BAA+B;AAC/B,IAAK,cAKJ;AALD,WAAK,cAAc;IACf,qDAAS,CAAA;IACT,qDAAS,CAAA;IACT,mDAAI,CAAA;IACJ,mDAAI,CAAA;AACR,CAAC,EALI,cAAc,KAAd,cAAc,QAKlB;AAAA,CAAC;AACF,QAAQ;AACR,IAAK,MAKJ;AALD,WAAK,MAAM;IACP,2BAAiB,CAAA;IACjB,2BAAiB,CAAA;IACjB,2BAAiB,CAAA;IACjB,2BAAiB,CAAA;AACrB,CAAC,EALI,MAAM,KAAN,MAAM,QAKV;AACD,iBAAiB;AACjB,IAAK,YAGJ;AAHD,WAAK,YAAY;IACb,6CAAG,CAAA;IAAE,6CAAG,CAAA;IAAE,iDAAK,CAAA;IAAE,+CAAI,CAAA;IAAE,+CAAI,CAAA;IAAE,6CAAG,CAAA;IAAE,iDAAK,CAAA;IAAE,iDAAK,CAAA;IAAE,+CAAI,CAAA;IAAE,+CAAI,CAAA;IAC1D,uBAAO,CAAA;AACX,CAAC,EAHI,YAAY,KAAZ,YAAY,QAGhB;AACD,0CAA0C;AAE1C;IAAA;IAuUA,CAAC;IAnUG;;;;;OAKG;IACI,sCAAY,GAAnB;QACI,OAAO;QACP,IAAM,GAAG,GAAW,kBAAkB,CAAC;QACvC,IAAM,GAAG,GAAW,CAAC,CAAC,CAAC,2BAA2B;QAClD,IAAM,YAAY,GAAY,KAAK,CAAC;QACpC,IAAI,MAAM,GAAc,SAAS,CAAC;QAClC,IAAI,QAAQ,GAAS,IAAI,CAAC;QAC1B,IAAI,KAAK,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,IAAI,KAAK,GAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,IAAI,IAAI,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACpB,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,GAAG,GACH,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,GAAG,OAAO,YAAY,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,OAAO,MAAM,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,GAAG,OAAO,QAAQ,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC,CAAC,mBAAmB;QAChE,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,cAAc,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;QAClG,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB;QACnF,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;QAEpF,IAAI,QAAQ,GAAS,IAAI,CAAC;QAC1B,IAAI,cAAc,GAAc,SAAS,CAAC;QAC1C,IAAI,SAAgB,CAAC;QACrB,IAAI,WAAoB,CAAC;QACzB,WAAW,GAAG,aAAa,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAChC,qCAAqC;QAErC,gBAAgB;QAChB,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;QAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAE1C,IAAI,OAAO,GAAQ,GAAG,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC,iBAAiB;QAClE,OAAO,GAAG,WAAW,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC,uBAAuB;QACxE,OAAO,GAAG,KAAK,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC,oBAAoB;QAErE,6EAA6E;QAC7E,IAAI,YAAqB,CAAC;QAC1B,YAAY,GAAG,IAAI,CAAC,CAAC,KAAK;QAC1B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,YAAY,GAAG,EAAE,CAAC,CAAC,KAAK;QACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,YAAY,GAAG,aAAa,CAAC,CAAC,KAAK;QACnC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,aAAa,GAAY,YAAY,CAAC,CAAC,KAAK;QAChD,IAAI,SAAS,GAAQ,YAAY,CAAC,CAAC,KAAK;QACxC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACtC,+CAA+C;QAE/C,mBAAmB;QACnB,IAAI,SAAS,GAAsB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,wCAAwC;QAIpH,IAAM,MAAM,GAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACjC,IAAM,MAAM,GAAY,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,OAAO,MAAM,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,OAAO,MAAM,CAAC,CAAC;QAE9C,gDAAgD;QAChD,mDAAmD;QACnD,IAAI,SAAe,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,SAAS,CAAC,CAAC;QACpD,SAAS,GAAG,SAAS,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,SAAS,CAAC,CAAC;QACpD,SAAS,GAAG,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,SAAS,CAAC,CAAC;QACpD,+EAA+E;QAC/E,oEAAoE;QAEpE,iEAAiE;QACjE,mBAAmB;QACnB,iFAAiF;QACjF,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,8BAA8B;QAChF,iDAAiD;QACjD,eAAe;QACf,IAAI,IAAI,GAAG,mBAAmB,CAAC;QAC/B,wCAAwC;QACxC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,UAAU;QAC1B,IAAM,EAAE,GAAG,OAAO,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,sBAAsB;QACxE,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,OAAO,GAAG,OAAO,EAAE,CAAC,CAAC;QAC9C;YACI,IAAM,WAAS,GAAG,MAAM,CAAC;YACzB,IAAI,QAAQ,GAAG,MAAM,CAAC;YACtB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,WAAS,GAAG,OAAO,GAAG,OAAO,WAAS,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAO,QAAQ,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;SAC1D;QACD,IAAM,SAAS,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,GAAG,OAAO,GAAG,OAAO,SAAS,CAAC,CAAC;QACnE,4BAA4B;QAC5B,mEAAmE;QACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IACD;;;;OAIG;IACI,mCAAS,GAAhB;QACI,SAAS;QACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAC3B,UAAU,CAAC;gBACP,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;gCACQ,GAAC;YACN,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAC,CAAC,CAAC;YAC3B,UAAU,CAAC;gBACP,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;;QAJP,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,EAAE;oBAAlB,GAAC;SAKT;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SAC9B;QACD,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAC,CAAC,CAAC;SAC9B;QACD,mGAAmG;QACnG,6BAA6B;QAC7B,6DAA6D;QAC7D,0EAA0E;QAC1E,4CAA4C;QAC5C,6CAA6C;QAC7C,+DAA+D;IACnE,CAAC;IAED;;;;;;;;;OASG;IACI,oCAAU,GAAjB;QACI,IAAI,KAAK,GAAW,GAAG,GAAG,GAAG,CAAC,CAAC,aAAa;QAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,4BAA4B;QAEhD,IAAI,QAAQ,GAAW,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,WAAW;QAC/D,IAAI,QAAQ,GAAW,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,WAAW;QAC/D,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,oBAAoB;QAExD,IAAI,IAAI,GAAW,KAAK,CAAA,CAAC,MAAM;QAC/B,IAAI,IAAI,GAAW,CAAK,CAAA,CAAC,MAAM;QAC/B,IAAI,IAAI,GAAW,EAAK,CAAA,CAAC,MAAM;QAC/B,IAAI,IAAI,GAAW,KAAK,CAAA,CAAC,OAAO;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEhD,2CAA2C;QAC3C,gGAAgG;QAChG,0CAA0C;QAC1C,IAAI,OAAO,GAAG,IAAI,sBAAS,CAAC,6BAA6B,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,mCAAmC;QACpE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAE9D,IAAI,OAAO,GAAG,IAAI,sBAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,8BAA8B;IAClE,CAAC;IAEM,oCAAU,GAAjB;QACI,IAAI,IAAI,GAAG,yBAAyB,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,sBAAsB;QAC5G,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,sBAAsB;QACpH,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,iBAAiB;QAC/E,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY;QACxG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,wBAAwB;QACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,mCAAmC;IACnC,mBAAmB;IACZ,uCAAa,GAApB,UAAqB,KAAa;QAAE,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,6BAAiB;;QACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACzD;QAMD,uCAAuC;QACvC,IAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ;QACtD,IAAM,MAAM,kBAAO,MAAM,EAAK,MAAM,EAAK,MAAM,CAAC,CAAC,CAAC,QAAQ;QAC1D,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC;QAEtD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,mBAAmB;QAC7E,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,MAAM,EAAE,CAAC,CAAC,iBAAiB;QAElE,IAAM,QAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAC1C,IAAM,OAAO,cAAK,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,IAAK,QAAQ,CAAE,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACjC,cAAc;QACd,kFAAkF;QAClF,aAAa;QACb,IAAI,MAAM,GAAG,eAAI,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,mCAAmC;QACxE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA,CAAC,4BAA4B;QAEhD,MAAM;QACN,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC;YAChB,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;SAC/B,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA,MAAM;QACxB,cAAc;QACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,iBAAiB;YACjC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW;QAC7C,aAAa;QACb,OAAO,CAAC,GAAG,CAAC,UAAU,kBAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD,aAAa;QACb,OAAO,CAAC,GAAG,CAAC,YAAY,kBAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;QAE3D,IAAM,IAAI,GAAG,IAAI,GAAG,CAA0B;YAC1C,CAAC,MAAM,EAAE,OAAO,CAAC;YACjB,CAAC,KAAK,EAAE,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,2BAA2B;QAC3B,IAAI,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,GAAG;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,yBAAyB;QACtD,CAAC,CAAC,CAAC;QACH,KAAkB,UAAyB,EAAzB,KAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAzB,cAAyB,EAAzB,IAAyB,EAAE;YAAxC,IAAI,KAAK,SAAA;YACV,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,WAAW;SACpD;QACD,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,iBAAiB;SAC1D;QACD,aAAa;QACb,KAA2B,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE,EAAE,qIAAqI;YAA7J,IAAA,eAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;YAClB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;SACrD;QAED,OAAO;QACP,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,OAAO,CAAC,GAAG,CAAC,MAAM,OAAM,IAAI,YAAJ,IAAI,2BAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,MAAE,CAAC;QAChD,OAAO;QACD,IAAA,KAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAA5B,EAAE,QAAA,EAAK,EAAE,cAAmB,CAAC;QACpC,aAAa;QACP,IAAA,KAAc,EAAE,EAAf,EAAE,QAAA,EAAK,EAAE,cAAM,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,YAAY;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI;QAE7B,MAAM;QACN,IAAI,UAAU,GAAG;;;4BACb,qBAAM,CAAC,EAAA;;wBAAP,SAAO,CAAC;wBACR,qBAAM,CAAC,EAAA;;wBAAP,SAAO,CAAC;wBACR,qBAAM,CAAC,EAAA;;wBAAP,SAAO,CAAC;;;;SACX,CAAA;QACD,aAAa;QACb,OAAO,CAAC,GAAG,gBAAK,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,sBAAsB;QAClE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,cAAM,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC,CAAC,CAAA,WAAW;QACjE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,WAAW;QAC7C,0EAA0E;QAE1E,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,aAAa;QACb,IAAI,CAAC,0BAA0B,OAA/B,IAAI,kBAA4B,CAAC,GAAK,IAAI,GAAE,CAAC,GAAK,CAAC,CAAC,CAAC,GAAE;QACvD,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;IAEc,0BAAU,GAAzB;QAA0B,eAA6B;aAA7B,UAA6B,EAA7B,qBAA6B,EAA7B,IAA6B;YAA7B,0BAA6B;;QACnD,IAAI,GAAG,GAAG,uBAAuB,CAAC;QAClC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC/C,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACO,oDAA0B,GAAlC,UAAmC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;IACzE,CAAC;IAEO,yCAAe,GAAvB,UAAwB,IAAY;QAAZ,qBAAA,EAAA,YAAY;QAChC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO,IAAI,CAAC,CAAC;IACpD,CAAC;IApUe,8BAAc,GAAoB,IAAI,eAAe,EAAE,CAAC;IAqU5E,sBAAC;CAvUD,AAuUC,IAAA;kBAvUoB,eAAe;AA0UpC,8DAA8D","file":"","sourceRoot":"/","sourcesContent":["import BigNumber from \"bignumber.js\";\n\nexport namespace DDYTest {\n    // 全局变量\n    export let log = CC_EDITOR ? cc.log : console.log;\n    export let rootNode: cc.Node = null;\n    // 全局函数\n    export function randomNumber(from: number, to: number = 0): number {\n        return (to - from) * Math.random() + from;\n    }\n    export function randomInt(from: number, to: number = 0): number {\n        return ~~((to - from) * Math.random() + from);\n    }\n}\nwindow['DDYTest'] = DDYTest; // 挂载到 window 成为全局命名空间\n\n// 枚举成员是只读的\n// 整型数字枚举，默认0起始，逐个加1。可指定起始值或指定值\nenum LocalDirection {\n    NORTH = 2,\n    SOUTH = 4,\n    WEST,\n    EAST,\n};\n// 字符串枚举\nenum Season {\n    SPRINT = 'Spring',\n    SUMMER = 'Summer',\n    AUTUMN = 'Autumn',\n    WINTER = 'Winter',\n}\n// 异构枚举[整型和字符串混合]\nenum IDCardSubfix {\n    ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, ZERO,\n    X = 'X',\n}\n// 数字枚举相对字符串枚举多了 “反向映射”，可以通过枚举的值获取到对应的键key\n\nexport default class BasicKnowwledge {\n\n    static readonly sharedInstance: BasicKnowwledge = new BasicKnowwledge();\n\n    /**\n     * 简单数据类型\n     * let 声明块级作用域的变量\n     * var 声明全局作用域或函数作用域的变量，存在变量提升现象\n     * const 声明常量，声明时必须赋值，一旦赋值同一作用域不能在再重新赋值，但定义的引用类型，可以改变内部数据\n     */\n    public testDataType() {\n        // 指定类型\n        const str: string = 'Home page string';\n        const num: number = 1; // ts不具体区分 int float double\n        const isRequesting: boolean = false;\n        let result: undefined = undefined;\n        let variable: null = null;\n        let list1: number[] = [1, 2, 3];\n        let list2 = [4, 5, 6];\n        let list3: Array<number> = [7, 8, 9];\n        let map1: Map<string, number> = new Map();\n        map1.set('key1', 1);\n        let map2 = new Map([[\"a\", 1], [\"b\", 2]]);\n        let mp3 =\n            console.log(str + \" 类型是：\" + typeof str);\n        console.log(num + \" 类型是：\" + typeof num);\n        console.log(isRequesting + \" 类型是：\" + typeof isRequesting);\n        console.log(result + \" 类型是：\" + typeof result);\n        console.log(variable + \" 类型是：\" + typeof variable);\n        console.log(list1 + \" 类型是：\" + typeof list1); // 1,2,3 类型是：object\n        console.log(list2 + \" 类型是：\" + typeof list2);\n        console.log(list3 + \" 类型是：\" + typeof list3);\n\n        console.log('enum LocalDirection' + LocalDirection.NORTH + \" 类型是：\" + typeof LocalDirection.NORTH);\n        console.log('反射枚举值', LocalDirection[0], LocalDirection[2]); // 0 undefined  2 NORTH\n        console.log('enum Season', Season.SPRINT);\n        console.log('enum IDCardSubfix', IDCardSubfix[0], IDCardSubfix.ONE, IDCardSubfix.X);\n\n        let argvNull: null = null;\n        let argvUndefinded: undefined = undefined;\n        let argvNever: never;\n        let argvUnknown: unknown;\n        argvUnknown = \"true string\";\n        this.testDefaultArgv();\n        this.testDefaultArgv(argvNull);\n        this.testDefaultArgv(argvUndefinded);\n        this.testDefaultArgv(argvNever);\n        //this.testDefaultArgv(argvUnknown); \n\n        // string转number\n        let stringNumber1 = new Number('123');\n        let stringNumber2 = new Number(\"HeHe\"); // NaN\n        console.log(stringNumber1, stringNumber2);\n\n        let notSure: any = 666;\n        console.log(notSure + \" 类型是：\" + typeof notSure); // 666 类型是：number\n        notSure = \"Semlinker\";\n        console.log(notSure + \" 类型是：\" + typeof notSure); // Semlinker 类型是：string\n        notSure = false;\n        console.log(notSure + \" 类型是：\" + typeof notSure); // false 类型是：boolean\n\n        // unknown 成为 TS类型系统的另一种顶级类型，其他值可以赋值给unknown变量，除了any和unknown，其他类型不接受unknown赋值\n        let unknownValue: unknown;\n        unknownValue = true; // OK\n        console.log(unknownValue);\n        unknownValue = 42; // OK\n        console.log(unknownValue);\n        unknownValue = \"Hello World\"; // OK\n        console.log(unknownValue);\n\n        let unknownValue2: unknown = unknownValue; // OK\n        let anyValue2: any = unknownValue; // OK\n        console.log(unknownValue2, anyValue2);\n        // let value3: boolean = unknownValue; // Error\n\n        // Tuple元组，可以存不同类型值\n        let tupleType: [string, boolean] = [\"Semlinker\", true];\n        console.log(tupleType + \" 类型是：\" + typeof tupleType + \" 0:\" + tupleType[0]); // Semlinker,true 类型是：object 0:Semlinker\n        // 由于一般元组是知道元素数量和对应类型，所以可以对元组的下标访问是否越界和具体元素的操作是否合法做检查。\n        // 上面说一般情况是因为，元组 支持可选元素和扩展元素，造成元组实际长度不定。可选元素只出现在队尾\n        type MyTuple = [number, string, boolean?]; // type定义别名 结尾可选元素 元组\n        const tuple1: MyTuple = [1, '2'];\n        const tuple2: MyTuple = [1, '2', true];\n        console.log(tuple1 + \" 类型是：\" + typeof tuple1);\n        console.log(tuple2 + \" 类型是：\" + typeof tuple2);\n\n        // Void类型 某种程度上来说，void 类型像是与 any 类型相反，它表示没有任何类型。\n        // 注意：声明 void 类型的变量没有什么作用，因为它的值只能为 undefined 或 null\n        let voidValue: void;\n        console.log(voidValue + \" 类型是：\" + typeof voidValue);\n        voidValue = undefined;\n        console.log(voidValue + \" 类型是：\" + typeof voidValue);\n        voidValue = null;\n        console.log(voidValue + \" 类型是：\" + typeof voidValue);\n        // 默认情况下 null 和 undefined 是所有类型的子类型。 就是说你可以把 null 和 undefined 赋值给 number 类型的变量。\n        // 然而，\"strictNullChecks\": true，null 和 undefined 只能赋值给 void 和它们各自的类型。\n\n        // let/const 不允许先用后声明，这种现象称为：暂时性死区，英文为：temporal dead zone，简称 TDZ。\n        // var允许声明前使用（变量提升）\n        // console.log(name); // Block-scoped variable 'name' used before its declaration\n        console.log(\"age \" + age + \" 类型是：\" + typeof age); // age undefined 类型是：undefined\n        // console.log(\"id \" + id + \" 类型是：\" + typeof id);\n        // 自动推断类型(类型推导)\n        let name = 'First page string';\n        // let 变量不能重复声明，var变量可以重复声明，只得到最后一次声明的变量\n        var age = 18;\n        var age = 18.8; // 覆盖上次的声明\n        const id = '12580';\n        console.log(\"name: \" + name + \" 类型是：\" + typeof name);\n        console.log(\"age \" + age + \" 类型是：\" + typeof age); // age 18.8 类型是：number\n        console.log(\"id \" + id + \" 类型是：\" + typeof id);\n        {\n            const firstName = 'Wang';\n            let lastName = 'Ming';\n            var grade = 6;\n            console.log(\"firstName \" + firstName + \" 类型是：\" + typeof firstName);\n            console.log(\"lastName \" + lastName + \" 类型是：\" + typeof lastName);\n            console.log(\"grade \" + grade + \" 类型是：\" + typeof grade);\n        }\n        const firstName = 'Li';\n        console.log(\"firstName \" + firstName + \" 类型是：\" + typeof firstName);\n        // let 作用域为代码块，var 作用域为函数或全局\n        // console.log(\"lastName \" + lastName + \" 类型是：\" + typeof lastName);\n        console.log(\"grade \" + grade + \" 类型是：\" + typeof grade);\n\n        DDYTest.log('随机数为:' + DDYTest.randomNumber(2, 8));\n        DDYTest.log('随机整数:' + DDYTest.randomInt(2, 8));\n    }\n    /**\n     * console.log(a) 打印a的值\n     * 变量间可用 , 或 +  连接\n     * typeof a 获取a的类型\n     */\n    public testPrint() {\n        // 存在变量提升\n        for (var i = 0; i <= 2; i++) {\n            console.log(\"print3:\" + i);\n            setTimeout(() => {\n                console.log(\"print4:\" + i);\n            });\n        }\n        for (let i = 0; i <= 2; i++) {\n            console.log(\"print5:\" + i);\n            setTimeout(() => {\n                console.log(\"print6:\" + i);\n            });\n        }\n        for (var i = 0; i <= 2; i++) {\n            console.log(\"print1:\" + i);\n        }\n        for (let i = 0; i <= 2; i++) {\n            console.log(\"print2:\" + i);\n        }\n        // 顺序是 print3:[0 1 2]  print5:[0 1 2] print1:[0 1 2] print2:[0 1 2]  print4:[3 3 3] print6:[0 1 2] \n        // print4 为何输出了大于2的值3,且值都相同？ \n        // 大于3：ts/js是单线程，异步的setTimeout()会等同步代码执行完之后才开始计时，此时i为跳出循环的值:3\n        // 都相同：print6 let修饰异步setTimeout()捕获当前创建的变量，print4 var修饰，作用域为函数，被捕获的是同一个变量。\n        // var变量提升hoisting，将变量和函数声明移动到所在作用域的顶部，分两个阶段\n        // 声明阶段：变量名被提升到作用域顶部，但不会赋值。如果函数声明，函数整个定义也会被提升\n        // 初始化阶段：代码执行到变量声明位置时，会被实际赋值，如果代码中没有显示的赋值操作，那么变量被初始化为 undefined\n    }\n\n    /**\n     * testNumber\n     * Number.MAX_SAFE_INTEGER 精度范围内能表示的整数最大值 2^53 - 1 = 9007199254740991，超过该值发生精度问题\n     * Number.MIN_SAFE_INTEGER 精度范围内能表示的整数最大值 -2^53 + 1 = -9007199254740991\n     * Number.MAX_VALUE 精度范围内最大值 1.7976931348623157e+308\n     * Number.MIN_VALUE 精度范围内最小值 5e-324\n     * Infinity 无穷大 (-Infinity 负无穷大)\n     * 想表示更大数，可以用 bigint等 如 decimal.js bignumber.js big.js\n     * 精度问题：浮点数时，某些十进制小数可能无法用精确的二进制表示，如 0.1 + 0.2 可能产生一个 0.30000000000000004\n     */\n    public testNumber() {\n        let value: number = 0.1 + 0.2; // 不会精确等于 0.3\n        console.log(value); // 输出可能是 0.30000000000000004\n\n        let safeInt1: number = Number.MAX_SAFE_INTEGER + 1; // 超出安全整数范围\n        let safeInt2: number = Number.MAX_SAFE_INTEGER + 2; // 超出安全整数范围\n        console.log(safeInt1 === safeInt2); // 输出可能是 true，因为精度丢失\n\n        let num1: number = 10000 // 十进制\n        let num2: number = 0b100 // 二进制\n        let num3: number = 0o100 // 八进制\n        let num4: number = 0x100 // 十六进制\n        console.log(num1 + \" 类型是：\" + typeof num1);\n        console.log(num2 + \" 类型是：\" + typeof num2);\n        console.log(num3 + \" 类型是：\" + typeof num3);\n        console.log(num4 + \" 类型是：\" + typeof num4);\n        console.log('num4 to string:', num4.toString());\n\n        // Cocos3x可以用 npm install big.js --save 方式 \n        // Cocos2x只能将源码放进assets 大数表示库对比 https://blog.csdn.net/feiying0canglang/article/details/125194433\n        // https://github.com/MikeMcl/bignumber.js\n        let bigNum1 = new BigNumber('999999999999999999999999999');\n        console.log(bigNum1.toString()); // 9.99999999999999999999999999e+26\n        console.log(bigNum1.toFixed()); // 999999999999999999999999999\n\n        let bigNum2 = new BigNumber(bigNum1.toString());\n        console.log(bigNum2.toFixed()); // 999999999999999999999999999\n    }\n\n    public testString() {\n        let str1 = 'Today is Sunday! Sunday';\n        console.log(str1 + '长度:' + str1.length);\n        console.log(str1 + 'Sun:' + str1.indexOf('Sun') + \" 不存在的Mon:\" + str1.indexOf('Mon')); // 首次出现位置，索引从0开始，未找到-1\n        console.log(str1 + 'Sun:' + str1.lastIndexOf('Sun') + \" 不存在的Mon:\" + str1.lastIndexOf('Mon')); // 尾次出现位置，索引从0开始，未找到-1\n        console.log(str1 + '从指定起始位置找Sun:' + str1.indexOf('Sun', 12)); // 检索起始位置查找首次出现位置\n        console.log(str1 + '是否包含Sun:' + str1.includes('Sun') + ' 是否包含Mon:' + str1.includes('Mon')); // 是否包含指定字符串\n        console.log(str1.slice(17));\n        console.log(str1.slice(1, 3));\n        console.log(str1.slice(-1, 3)); // 如果某个参数为负，则从字符串的结尾开始计数\n        console.log(str1.slice(1, -3));\n    }\n    // 扩展元素，类型前添加 ...(扩展运算符) 表示他是一个扩展元素\n    // 函数参数中 ... 表示剩余参数\n    public testThreeDots(first: string, ...rest: string[]) {\n        console.log(\"first:\", first);\n        for (let index = 0; index < rest.length; index++) {\n            console.log(\"rest index\" + index + \":\" + rest[index]);\n        }\n        // 元组中...Type[] 数组表示剩余部分\n        type StringNumberBooleans = [string, number, ...boolean[]]; //前两个元素为string,number,剩下元素都为boolean\n        type StringNumbersBoolean = [string, ...number[], boolean]; //首尾两个元素为string,boolean,中间元素都为number\n        type StringsNumberBoolean = [...string[], number, boolean]; // 最后两个元素为number,boolean，前面元素为string\n\n        // 数组或对象字面量中使用 ... 用来展开数组或对象中的元素，简化代码编写\n        const array1 = [1, 2, 3];\n        const array2 = [4, 5, 6];\n        const array3 = [7, 8, 9];\n        const array4 = array1.concat(array2, array3); // ES5合并\n        const array5 = [...array1, ...array2, ...array3]; // ES6合并\n        console.log(\"array4:\" + array4 + \" array5:\" + array5);\n\n        console.log(\"array1 max:\", Math.max.apply(null, array1)); // ES5 要调用apply展开数组\n        console.log(\"array2 max:\", Math.max(...array2)); // ES6 ...运算符直接展开\n\n        const baseInfo = { name: 'Tom', age: 18 };\n        const allInfo = { gender: 'male', class: 6, ...baseInfo };\n        console.log(\"allInfo:\", allInfo);\n        // 还可以字符串转字符数组\n        // Typescript 类型指令 https://blog.csdn.net/weixin_53312997/article/details/127551316\n        // @ts-ignore\n        var chars1 = [...\"hello\"].reverse(); // 注:任何实现了Iterator接口的对象都可使用...转换为数组\n        console.log(chars1) // [\"h\", \"e\", \"l\", \"l\", \"o\"]\n\n        // Map\n        let myMap = new Map([\n            [0, 'a'], [1, 'b'], [2, 'c']\n        ]);\n        myMap.set(3, 'd');// 设置值\n        // 根据key取value\n        console.log(\"key:2 对应的value:\", myMap.get(2));\n        if (myMap.has(1)) { // 是否包含某个key bool\n            myMap.delete(1); // 根据key删除键值对\n        }\n        console.log('元素个数:', myMap.size); // size获取个数\n        // @ts-ignore\n        console.log(\"allKeys:\" + [...Array.from(myMap.keys())]);\n        // @ts-ignore\n        console.log(\"allValues:\" + [...Array.from(myMap.values())])\n\n        const map0 = new Map<string, string | number>([\n            ['name', 'James'],\n            ['age', 30],\n        ]);\n\n        // foreEach遍历 value在前，key在后\n        map0.forEach((value, key) => {\n            console.log(value, key); // 👉️ James name, 30 age\n        });\n        for (let value of Array.from(map0.values())) {\n            console.log(\"转为数组遍历value 1:\", value); // 该方式打印出了值\n        }\n        for (let value in Array.from(map0.values())) {\n            console.log(\"转为数组遍历value 2:\", value); // 该方式只打印出了序号 0,1\n        }\n        // @ts-ignore\n        for (const [key, value] of map0) { // 使用@ts-ignore否则 can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.\n            console.log(key, value); // 👉️ name James, age 30\n        }\n\n        // 日期构造\n        console.log(\"ES5:\", new (Date.bind.apply(Date, [null, 2024, 1, 31])));\n        console.log(\"ES6:\", new Date(...[2024, 1, 31]));\n        // 数组解构\n        const [x1, ...xn] = [1, 2, 3, 4, 5];\n        // @ts-ignore\n        const [y1, ...yn] = [];\n        console.log(\"x1:\" + x1);\n        console.log(\"xn:\" + xn);\n        console.log(\"y1:\" + y1); // undefined\n        console.log(\"yn:\" + yn); // 空\n\n        // 生成器\n        let makeNumber = function* () {\n            yield 1;\n            yield 2;\n            yield 3;\n        }\n        // @ts-ignore\n        console.log([...Array.from(makeNumber())]); // Array.from() // 转数组\n        console.log(Array.from('RemoteDev'));\n        console.log(Array.from(new Set([1, 2, 3, 4, 5, 6])));\n        console.log(Array.from({ length: 10 }, () => 'Item'));//生成10个Item\n        console.log(Array.of(1, 5, 7, 9));//将一组值转换成数组\n        // Typescript数组扩展使用 https://blog.csdn.net/fittec/article/details/125923425\n\n        var args = [2, 3];\n        // @ts-ignore\n        this.testFunctionParamExtension(1, ...args, 4, ...[5]);\n        this.testFunctionParamExtension.apply(null, [1, 2, 3, 4, 5]);\n    }\n\n    private static innerPrint(...infos: (string | number)[]) {\n        let log = 'doudoudoudianyu666666';\n        for (let index = 0; index < infos.length; index++) {\n            log += (\" \" + infos[index]);\n        }\n        console.log(log);\n    }\n    private testFunctionParamExtension(v, w, x, y, z) {\n        console.log(\"v\" + v + \" w:\" + w + \" x:\" + x + \" y:\" + y + \" z:\" + z);\n    }\n\n    private testDefaultArgv(argv = \"aaa\") {\n        console.log(\"argv:\" + argv + \" \" + typeof argv);\n    }\n}\n\n\n// https://blog.csdn.net/qq_44749491/article/details/127439175"]}