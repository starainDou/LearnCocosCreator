{"version":3,"sources":["assets/Script/Test/TestScene.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAuC,6BAAY;IAAnD;QAAA,qEA8CC;QA3CG,WAAK,GAAW,CAAC,CAAC;;IA2CtB,CAAC;IAzCU,qCAAiB,GAAxB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,mBAAmB,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACM,oCAAgB,GAAvB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,kBAAkB,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAkB,GAAzB;QACG,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACpE,CAAC;IACO,uCAAmB,GAA3B;QACI,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IACjD,CAAC;IAEM,mCAAe,GAAtB;QACI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,UAAC,cAAc,EAAE,UAAU,EAAE,IAAI;YACzE,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;QACjF,CAAC,EAAE,UAAU,KAAK;YACd,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oCAAgB,GAAxB,UAAyB,cAAsB,EAAE,UAAkB,EAAE,IAAS;QAC1E,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;IACnF,CAAC;IACM,oCAAgB,GAAvB;QACI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,EAAE,UAAC,KAAK;YACtE,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8DAA8D;IACvD,mCAAe,GAAtB;QACI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,UAAC,KAAK;YAC9C,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;IA1CD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;4CACH;IAHD,SAAS;QAD7B,OAAO,CAAC,oBAAoB;OACR,SAAS,CA8C7B;IAAD,gBAAC;CA9CD,AA8CC,CA9CsC,EAAE,CAAC,SAAS,GA8ClD;kBA9CoB,SAAS;AAgD9B,8BAA8B;AAC9B,gDAAgD;AAChD,2aAA2a;AAC3a,2EAA2E;AAC3E,oDAAoD;AACpD,+DAA+D;AAC/D,6EAA6E;AAC7E,+CAA+C;AAC/C,wDAAwD","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass, property } = cc._decorator;\n\n@ccclass // 注释类定义，该类是cocos组件类\nexport default class TestScene extends cc.Component {\n\n    @property(cc.Integer)\n    count: number = 0;\n\n    public jumpSceneDataType() {\n        cc.director.loadScene('TestDataTypeScene', () => {\n            console.log('TestDataType scene onLaunched');\n        });\n    }\n    public jumpSceneGeneric() {\n        cc.director.loadScene('TestGenericScene', function(){\n            console.log('TestGenericc scene onLaunched');\n        });\n    }\n\n    public jumpSceneMathScene() {\n       cc.director.loadScene('TestMathScene', this.onLaunchedMathScene);\n    }\n    private onLaunchedMathScene() {\n        console.log('TestGenericc scene onLaunched');\n    }\n\n    public jumpButtonScene() {\n        cc.director.preloadScene('TestButtonScene', (completedCount, totalCount, item) => {\n            console.log('TestButton scene onProgressMethod', completedCount, totalCount);\n        }, function (error) {\n            console.log('TestButton scene onLoaded error:' + error);\n        });\n    }\n\n    private onProgressMethod(completedCount: number, totalCount: number, item: any) {\n        console.log('TestGenericc scene onProgressMethod', completedCount, totalCount);\n    }\n    public jumpNetworkScene() {\n        cc.director.preloadScene('TestNetworkScene', this.onProgressMethod, (error) => {\n            console.log('TestNetwork scene onLoaded error:' + error);\n        });\n    }\n\n    // https://blog.csdn.net/dxt19980308/article/details/130288780\n    public jumpLayoutScene() {\n        cc.director.preloadScene('TestLayoutScene', (error) => {\n            console.log('TestNetwork scene onLoaded error:' + error);\n        });\n    }\n}\n\n// @ccclass  注释类定义，该类是cocos组件类\n// @property 注释属性定义，指定属性的属性、默认值等  @property(cc.)\n// export function property(options?: {type?: any; visible?: boolean|(() => boolean); displayName?: string; tooltip?: string; multiline?: boolean; readonly?: boolean; min?: number; max?: number; step?: number; range?: number[]; slide?: boolean; serializable?: boolean; formerlySerializedAs?: string; editorOnly?: boolean; override?: boolean; animatable?: boolean} | any[]|Function|cc.ValueType|number|string|boolean): Function;\n//\texport function property(_target: Object, _key: any, _desc?: any): void;\n// @menu 注释组件的菜单路径，在编辑器中创建实例时选择 @menu(\"Custom/UUID\")\n// @executionOrder 注释组件的执行顺序，控制组件update被调用顺序 @executionOrder(2)\n// @requireComponent 注释组件依赖关系，指定当前组件必须依赖其他组件存在 @requireComponent(cc.RigiBody)\n// @disallowMultiple 注释组件唯一性，当前组件在同一节点只能存在一个实例 \n// @editor 注释自定义编辑器相关的信息，包括自定义的属性检查器等 @editor(cc.Prefab)"]}